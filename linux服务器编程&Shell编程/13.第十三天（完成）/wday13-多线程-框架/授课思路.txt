



	授课思路

友情提示：今天的课程需要学员，加强课堂实践，提高听课效率。

	上一次课程回顾

	4、线程的互斥
		互斥概念及案例   

	5、线程的同步
		posix条件变量
		生产者和消费者模型
	
		线程理论


	6、多线程读写共享内存
		1、共享内存读写模型 api  OK
		2、信号量的读写模型 api  OK
		3、多线程的测试框架   ===》
		4、组合我们的业务逻辑

	7、多进程服务器框架集成读写共享内存（并发模式）

		
	8、多线程服务器框架集成读写共享内存（并发模式）
		服务器 并发调试 技巧
	

	9、linux系统编程和应用编程 课程框架总结








	授课思路

友情提示：今天的课程需要学员，加强课堂实践，提高听课效率。

请大家把上一次作业整理一下。	

1 上一次课程回顾

2 多进程读写共享内存
	
内存综合案例
		1、共享内存读写模型 api  OK
		2、信号量的读写模型 api  OK
		3、多进程的测试框架   ===》
		4、组合我们的业务逻辑

3 线程
	1、线程概念和线程基本api
	2、多线程测试框架 前端
		项目开发中，多线程易犯错误  
	3、线程属性

============================================================

	4、线程的互斥
		互斥概念及案例

	5、线程的同步
		条件变量
		生产者和消费者模型

====》多线程加锁和共享内存在一起。。。。。

// 互斥锁和条件等待 解决生产者和消费者模型

条件等待模型
//socket连接池。。。。。

		pthread_mutex_lock(&mutex);
	
		while (g_Count == 0)  //while 醒来以后需要重新判断 条件g_Count是否满足，如果不满足，再次wait
		{	
			pthread_cond_wait(&my_condition, &mutex);（解锁、等待、加锁
		}
	
		g_Count --
		pthread_mutex_unlock(&mutex);
	
发送条件成立模型

		pthread_mutex_lock(&mutex);	
		g_Count++;
		pthread_cond_signal(&my_condition); //通知，在条件上等待的线程 		
		pthread_mutex_unlock(&mutex);

//

多线程同步问题：
线程共享进程的资源和地址空间
任何线程对系统资源的操作都会给其他线程带来影响
多线程同步方法：
互斥锁（线程锁。。。。。） ，线程库提供的   
====》进程A）创建了10个线程 进程B创建20线程
因为我要在某一个进程上定义一个线程锁mutextA，请问进程不能用mutextA。
信号量（同步进程，同步线程）IPC机制，直接归内管理
条件变量









	


	



		


	
	